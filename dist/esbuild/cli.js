#!/usr/bin/env node
"use strict";(()=>{var X=Object.create;var H=Object.defineProperty;var Z=Object.getOwnPropertyDescriptor;var ee=Object.getOwnPropertyNames;var re=Object.getPrototypeOf,te=Object.prototype.hasOwnProperty;var h=(t=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(t,{get:(e,r)=>(typeof require!="undefined"?require:e)[r]}):t)(function(t){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var se=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var oe=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of ee(e))!te.call(t,s)&&s!==r&&H(t,s,{get:()=>e[s],enumerable:!(o=Z(e,s))||o.enumerable});return t};var A=(t,e,r)=>(r=t!=null?X(re(t)):{},oe(e||!t||!t.__esModule?H(r,"default",{value:t,enumerable:!0}):r,t));var p=(t,e,r)=>new Promise((o,s)=>{var n=d=>{try{a(r.next(d))}catch(i){s(i)}},c=d=>{try{a(r.throw(d))}catch(i){s(i)}},a=d=>d.done?o(d.value):Promise.resolve(d.value).then(n,c);a((r=r.apply(t,e)).next())});var Y=se((pe,K)=>{var l=K.exports={},g,w;function D(){throw new Error("setTimeout has not been defined")}function q(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?g=setTimeout:g=D}catch{g=D}try{typeof clearTimeout=="function"?w=clearTimeout:w=q}catch{w=q}})();function W(t){if(g===setTimeout)return setTimeout(t,0);if((g===D||!g)&&setTimeout)return g=setTimeout,setTimeout(t,0);try{return g(t,0)}catch{try{return g.call(null,t,0)}catch{return g.call(this,t,0)}}}function ae(t){if(w===clearTimeout)return clearTimeout(t);if((w===q||!w)&&clearTimeout)return w=clearTimeout,clearTimeout(t);try{return w(t)}catch{try{return w.call(null,t)}catch{return w.call(this,t)}}}var f=[],B=!1,k,x=-1;function ie(){!B||!k||(B=!1,k.length?f=k.concat(f):x=-1,f.length&&U())}function U(){if(!B){var t=W(ie);B=!0;for(var e=f.length;e;){for(k=f,f=[];++x<e;)k&&k[x].run();x=-1,e=f.length}k=null,B=!1,ae(t)}}l.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];f.push(new J(t,e)),f.length===1&&!B&&W(U)};function J(t,e){this.fun=t,this.array=e}J.prototype.run=function(){this.fun.apply(null,this.array)};l.title="browser";l.browser=!0;l.env={};l.argv=[];l.version="";l.versions={};function b(){}l.on=b;l.addListener=b;l.once=b;l.off=b;l.removeListener=b;l.removeAllListeners=b;l.emit=b;l.prependListener=b;l.prependOnceListener=b;l.listeners=function(t){return[]};l.binding=function(t){throw new Error("process.binding is not supported")};l.cwd=function(){return"/"};l.chdir=function(t){throw new Error("process.chdir is not supported")};l.umask=function(){return 0}});var G=A(h("figlet"));var j={name:"ssv-scanner",version:"1.0.3",description:"Tool for retrieving events data (cluster snapshots and owner nonce) from the SSV network contract.",author:"SSV.Network",repository:"https://github.com/bloxapp/ssv-scanner",license:"MIT",keywords:["ssv","ssv.network","cluster","nonce","scanner"],main:"./dist/tsc/src/main.js",types:"./dist/tsc/src/main.d.ts",bin:{"ssv-keys":"./dist/tsc/src/cli.js"},engines:{node:">=12"},scripts:{"dev:cli":"ts-node src/cli.ts",cli:"node ./dist/tsc/src/cli.js",lint:"eslint src/ --ext .js,.jsx,.ts,.tsx",clean:"rm -rf dist build package","ts-node":"ts-node","copy-json":"cpy './src/shared/abi/*.json' './dist/tsc/src/shared/abi/'",build:"tsc -p tsconfig.json","build-all":"yarn clean && yarn build && yarn copy-json && yarn esbuild",esbuild:"node ./esbuild.js","pre-commit":"yarn test && yarn lint && yarn build-all"},devDependencies:{"@types/argparse":"^2.0.10","@types/cli-progress":"^3.11.0","@types/node":"^15.14.9","cpy-cli":"^5.0.0",esbuild:"^0.14.38","esbuild-node-externals":"^1.4.1",eslint:"^7.32.0","ts-node":"^10.9.1",typescript:"^4.6.4"},dependencies:{"@types/figlet":"^1.5.4",argparse:"^2.0.1","cli-progress":"^3.11.2",figlet:"^1.5.2",web3:"^1.10.0"},licenses:[{MIT:"SEE LICENSE IN LICENCE FILE"}]};var O=A(Y()),z=h("argparse");var F=h("argparse"),C=class{constructor(e,r){this.name=e;this.description=r;this.env="";this.parser=new F.ArgumentParser({description:this.description}),this.setArguments(this.parser)}parse(e){e.splice(0,1);let r=e.map(s=>(s.endsWith("_stage")&&(this.env="stage",s=s.replace("_stage","")),s)),o=this.parser.parse_args(r);return this.env&&(o.network+=`_${this.env}`),o}};var $=A(h("cli-progress"));var R=A(h("web3"));var ce={MAINNET:"prod:v4.mainnet",HOLESKY:"prod:v4.holesky",HOLESKY_STAGE:"stage:v4.holesky"},E=class{constructor(e,r){let[o,s]=ce[e.toUpperCase()].split(":"),[n,c]=s.split(".");n=n.toUpperCase(),c=c.toUpperCase();let a;try{a=h(`../shared/abi/${o}.${s}.abi.json`)}catch(i){throw console.error(`Failed to load JSON data from ${o}.${s}.abi.json`,i),i}let d;try{d=h(`../shared/abi/${o}.${s}.views.abi.json`)}catch(i){throw console.error(`Failed to load JSON data from ${o}.${s}.views.abi.json`,i),i}if(!a.contractAddress||!a.abi||!a.genesisBlock)throw new Error(`Missing core data in JSON for ${o}.${s}`);if(!d.contractAddress||!d.abi)throw new Error(`Missing views data in JSON for ${o}.${s}`);this.contract={version:n,network:c,address:a.contractAddress,addressViews:d.contractAddress,abi:a.abi,abiViews:d.abi,genesisBlock:a.genesisBlock},this.web3=new R.default(r)}get contractAddress(){return this.contract.address}get abiCore(){return this.contract.abi}get abiViews(){return this.contract.abiViews}get contractCore(){return new this.web3.eth.Contract(this.abiCore,this.contract.address)}get contractViews(){return new this.web3.eth.Contract(this.abiViews,this.contract.addressViews)}get genesisBlock(){return this.contract.genesisBlock}};var Q=A(h("web3")),S=class{constructor(e){this.DAY=5400;this.WEEK=this.DAY*7;this.MONTH=this.DAY*30;if(!e.nodeUrl)throw Error("ETH1 node is required");if(!e.network)throw Error("Network is required");if(!e.ownerAddress)throw Error("Cluster owner address is required");if(e.ownerAddress.length!==42)throw Error("Invalid owner address length.");if(!e.ownerAddress.startsWith("0x"))throw Error("Invalid owner address.");this.params=e,this.params.ownerAddress=new Q.default().utils.toChecksumAddress(this.params.ownerAddress)}};var P=class extends S{constructor(){super(...arguments);this.eventsList=["ValidatorAdded"]}run(r){return p(this,null,function*(){r&&(console.log(`
Scanning blockchain...`),this.progressBar=new $.default.SingleBar({},$.default.Presets.shades_classic));try{let o=yield this._getLatestNonce(r);return r&&this.progressBar.stop(),o}catch(o){throw r&&this.progressBar.stop(),new Error(o)}})}_getLatestNonce(r){return p(this,null,function*(){let o=new E(this.params.network,this.params.nodeUrl),s;try{s=yield o.web3.eth.getBlockNumber()}catch(m){throw new Error("Could not access the provided node endpoint.")}try{yield o.contractCore.methods.owner().call()}catch(m){throw new Error("Could not find any cluster snapshot from the provided contract address.")}let n=this.MONTH,c=0,a=o.genesisBlock,d=o.web3.eth.abi.encodeParameter("address",this.params.ownerAddress),i={fromBlock:a,toBlock:s,topics:[null,d]};r&&this.progressBar.start(s,0);do{let m;try{m=(yield o.contractCore.getPastEvents("AllEvents",i)).filter(T=>this.eventsList.includes(T.event)),c+=m.length,i.fromBlock=i.toBlock+1}catch(T){if(n===this.MONTH)n=this.WEEK;else if(n===this.WEEK)n=this.DAY;else throw new Error(T)}i.toBlock=Math.min(i.fromBlock+n,s),r&&this.progressBar.update(i.toBlock)}while(i.toBlock-i.fromBlock>0);return r&&this.progressBar.update(s,s),c})}};var _=class extends C{constructor(){super("nonce","Handles nonce operations")}setArguments(e){e.add_argument("-nw","--network",{help:"The network",choices:["mainnet","holesky"],required:!0,dest:"network"}),e.add_argument("-n","--node-url",{help:"ETH1 (execution client) node endpoint url",required:!0,dest:"nodeUrl"}),e.add_argument("-oa","--owner-address",{help:"The cluster owner address (in the SSV contract)",required:!0,dest:"ownerAddress"})}run(e){return p(this,null,function*(){try{let o=yield new P(e).run(!0);console.log("Next Nonce:",o)}catch(r){console.error("\x1B[31m",r.message)}})}};var L=A(h("cli-progress"));var V=class extends S{constructor(){super(...arguments);this.eventsList=["ClusterDeposited","ClusterWithdrawn","ValidatorRemoved","ValidatorAdded","ClusterLiquidated","ClusterReactivated"]}run(r,o){return p(this,null,function*(){if(!(Array.isArray(r)&&this._isValidOperatorIds(r.length)))throw Error("Comma-separated list of operator IDs. The amount must be 3f+1 compatible.");r=[...r].sort((c,a)=>c-a),o&&(console.log(`
Scanning blockchain...`),this.progressBar=new L.default.SingleBar({},L.default.Presets.shades_classic));let n=yield this._getClusterSnapshot(r,o);return o&&this.progressBar.stop(),n})}_getClusterSnapshot(r,o){return p(this,null,function*(){let s,n=new E(this.params.network,this.params.nodeUrl);try{s=yield n.web3.eth.getBlockNumber()}catch(y){throw new Error("Could not access the provided node endpoint: "+y)}try{yield n.contractCore.methods.owner().call()}catch(y){throw new Error("Could not find any cluster snapshot from the provided contract address: "+y)}let c=this.MONTH,a,d=0,i=0,m=n.genesisBlock,T=n.web3.eth.abi.encodeParameter("address",this.params.ownerAddress),v={fromBlock:Math.max(s-c,m),toBlock:s,topics:[null,T]};for(o&&this.progressBar.start(s,0);!a&&v.fromBlock>=m;){let y;try{y=yield n.contractCore.getPastEvents("allEvents",v),y.filter(u=>this.eventsList.includes(u.event)).filter(u=>JSON.stringify(u.returnValues.operatorIds.map(N=>+N))===JSON.stringify(r)).sort((u,N)=>u.blockNumber-N.blockNumber).forEach(u=>{if(u.blockNumber>=d){let N=d;if(d=u.blockNumber,N===u.blockNumber&&u.transactionIndex<i)return;i=u.transactionIndex,a=u.returnValues.cluster}}),v.toBlock=v.fromBlock}catch(u){console.error(u),c===this.MONTH?c=this.WEEK:c===this.WEEK&&(c=this.DAY)}v.fromBlock=v.toBlock-c,o&&this.progressBar.update(s-(v.toBlock-c))}return o&&this.progressBar.update(s,s),a=a||["0","0","0",!0,"0"],{payload:{Owner:this.params.ownerAddress,Operators:r.sort((y,u)=>y-u).join(","),Block:d||s,Data:a.join(",")},cluster:{validatorCount:a[0],networkFeeIndex:a[1],index:a[2],active:a[3],balance:a[4]}}})}_isValidOperatorIds(r){return!(r<4||r>13||r%3!=1)}};var I=class extends C{constructor(){super("cluster","Handles cluster operations")}setArguments(e){e.add_argument("-nw","--network",{help:"The network",choices:["mainnet","holesky"],required:!0,dest:"network"}),e.add_argument("-n","--node-url",{help:"ETH1 (execution client) node endpoint url",required:!0,dest:"nodeUrl"}),e.add_argument("-oa","--owner-address",{help:"The cluster owner address (in the SSV contract)",required:!0,dest:"ownerAddress"}),e.add_argument("-oids","--operator-ids",{help:"Comma-separated list of operators IDs regarding the cluster that you want to query",required:!0,dest:"operatorIds"})}run(e){return p(this,null,function*(){try{let r=e.operatorIds.split(",").map(n=>{if(Number.isNaN(+n))throw new Error("Operator Id should be the number");return+n}).sort((n,c)=>n-c),s=yield new V(e).run(r,!0);console.table(s.payload),console.log("Cluster snapshot:"),console.table(s.cluster),console.log(JSON.stringify({block:s.payload.Block,"cluster snapshot":s.cluster,cluster:Object.values(s.cluster)},null,"  "))}catch(r){console.error("\x1B[31m",r.message)}})}};var de=t=>p(void 0,null,function*(){return new Promise(e=>{(0,G.default)(t,(r,o)=>{if(r)return e("");e(o)})})});function M(){return p(this,null,function*(){let t=`SSV Scanner v${j.version}`,e=yield de(t);if(e){console.log(" -----------------------------------------------------------------------------------"),console.log(`${e||t}`),console.log(" -----------------------------------------------------------------------------------");for(let m of String(j.description).match(/.{1,75}/g)||[])console.log(` ${m}`);console.log(` -----------------------------------------------------------------------------------
`)}let r=new z.ArgumentParser,o=r.add_subparsers({title:"commands",dest:"command"}),s=new I,n=new _,c=o.add_parser(s.name,{add_help:!0}),a=o.add_parser(n.name,{add_help:!0}),d="",i=O.argv.slice(2);switch(i[1]&&i[1].includes("--help")?(s.setArguments(c),n.setArguments(a),r.parse_args()):(d=r.parse_known_args()[0].command,s.setArguments(c),n.setArguments(a)),d){case s.name:yield s.run(s.parse(i));break;case n.name:yield n.run(n.parse(i));break;default:console.error("Command not found"),O.exit(1)}})}M();})();
